#!/bin/sh

app="${0##*/}"

passcmd() {
  pass="$HOME"/mail/.netrc.asc

  test -f "$pass" || \
    { printf 'ERROR: password file not found: %s\n' "$pass" >&2; exit 1; }

  gpg --for-your-eyes-only --no-tty -qd "$pass" | grep "$1" | cut -d ' ' -f 6
}

case "$1" in
  zoho)
    user="${ZOHO_EMAIL:-$EMAIL}"
    server='smtp.zoho.com'
    port=587
    pass="$(passcmd "$1")"
    ;;
  gmail)
    user="${GMAIL_EMAIL:-$EMAIL}"
    server='smtp.gmail.com'
    port=587
    pass="$(passcmd "$1")"
    ;;
  riseup)
    user="${RISEUP_EMAIL:-$EMAIL}"
    server='mail.riseup.net'
    port=587
    pass="$(passcmd "$1")"
    ;;
  *)
    # shellcheck disable=SC1039
    cat <<EOF | sed 's/^ \{4\}//'
    === Usage ===

    $app <account> <file|stdin>

    === Examples ===

    $app zoho draft.eml

    ------

    $app zoho <<EOF
    To: recipient@example.com
    From: Quinn Jones <quinn@example.com>
    Subject: Subject Text

    Body text.
    EOF

    ------

    alias send='$app zoho'
    send draft.eml

    === Notes ===

    - The "From:" header must use the same user email
      address as the smtp auth user.

    - The <account> must be one of "zoho", "gmail", or
      "riseup".

    - The <account> requires a password which is retrieved
      from a gpg encrypted file at "$HOME/mail/.netrc.asc".
      Most likely it will be an application password set up
      through the email provider (because 2FA **should** be
      enabled). For example:

          cat <<'EOF' >> $HOME/mail/.netrc
          machine *.gmail.com login USERNAME@DOMAIN password PASSWORD
          machine *.zoho.com login USERNAME@DOMAIN password PASSWORD
          machine *.riseup.net login USERNAME password PASSWORD
          EOF

          gpg -ae $HOME/mail/.netrc
          shred -zu $HOME/mail/.netrc

    - The email address / smtp user is configured by setting
      environment variables: ZOHO_EMAIL, GMAIL_EMAIL and/or
      RISEUP_EMAIL. All of these fallback to using the EMAIL
      environment variable.
EOF
    exit 1
    ;;
esac && shift

cmd() {
  sendmail -t -au"$user" -ap"$pass" -f "$user" -H \
    "openssl s_client -quiet -starttls smtp -tls1_2 -connect $server:$port"
}

if test -f "$1"; then
  cmd < "$1"
elif ! test -t 0; then
  cmd
else
  printf 'ERROR: %s requires an existing file or stdin/heredoc\n' "$app"
  exit 1
fi
