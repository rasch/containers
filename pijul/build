#!/bin/sh

version="${PIJUL_VERSION:-~1.0.0-beta}"

build=$(buildah from --pull alpine:edge)
container=$(buildah from --pull alpine:edge)

trap 'buildah rm "$build" "$container"' EXIT INT TERM

# NOTE: normally this should be done with the `build` container to save time and
# bandwidth, but the version of `rust` installed by `rustup` wouldn't build
# `pijul`. This is (hopefully) just a temporary workaround.
buildah run "$build" -- \
  apk add --no-cache \
    build-base \
    cargo \
    libsodium-dev \
    make \
    openssl-dev \
    pkgconf \
    rust

buildah run "$build" -- \
  cargo install pijul --version "$version" --all-features

buildah copy --from "$build" "$container" /root/.cargo/bin /usr/local/bin

buildah copy "$container" scripts /usr/local/bin
buildah copy "$container" config/.env /root/.env
buildah copy "$container" config/.profile /root/.profile
buildah copy --chmod 700 "$container" config/.ssh /root/.ssh

buildah run "$container" -- \
  apk add --no-cache \
    gnupg \
    libsodium-dev \
    libstdc++ \
    openssl-dev

buildah config \
  --cmd '[]' \
  --entrypoint '["entrypoint.sh", "pijul"]' \
  --env EDITOR=vi \
  "$container"

if ! buildah run -t "$container" -- pijul --version; then
  printf 'ERROR: pijul not installed\n' >&2
  exit 1
fi

buildah commit "$container" pijul
